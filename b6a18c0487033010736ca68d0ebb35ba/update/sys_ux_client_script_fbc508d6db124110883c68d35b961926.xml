<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_client_script">
    <sys_ux_client_script action="INSERT_OR_UPDATE">
        <includes>4390488d2fa1c1102e98f5ecf699b654</includes>
        <macroponent display_value="Landing Page">63c5c4d6db124110883c68d35b9619a8</macroponent>
        <name>Check User Word</name>
        <preset/>
        <required_translations/>
        <script><![CDATA[/**
 * @param {params} params
 * @param {api} params.api
 * @param {any} params.event
 * @param {any} params.imports
 * @param {ApiHelpers} params.helpers
 */
function handler({
    api,
    event,
    helpers,
    imports
}) {
    var row = parseInt(api.state.currentRow);
    var attributes = api.state.attributes;
    var primeWord = api.data.prime_word.output;
    var userWord = api.state.userWord.toUpperCase();
    var isWordValid = api.data.does_word_exist.output;
    var attemptComplete = false;
    const gtwUtils = imports["x_317911_us_telc_0.GTW_Utils"]();
    var matchingWords = {
        "exact": [],
        "almost": []
    };

    if (isWordValid) {
        if (userWord === primeWord) {
            for (var l = 1; l < 6; l++) {
                attributes["row" + row]["c" + l]["hint"] = [{
                    "status": "positive"
                }];
            }
            attributes["row" + row]["disable"] = true;
            attemptComplete = true;
            switch (row) {
                case 1:
                    {
                        api.setState("appreciation", "Fantabulous!");
                        break;
                    }
                case 2:
                    {
                        api.setState("appreciation", "Fantastic!");
                        break;
                    }
                case 3:
                    {
                        api.setState("appreciation", "Fabulous!");
                        break;
                    }
                case 4:
                    {
                        api.setState("appreciation", "Awesome!");
                        break;
                    }
                case 5:
                    {}
                case 6:
                    {
                        api.setState("appreciation", "Good!");
                        break;
                    }
            }
        } else {
            for (var i = 0; i < userWord.length; i++) {
                if (primeWord[i] === userWord[i]) {
                    matchingWords.exact.push(i + 1);
                } else {
                    if (primeWord.indexOf(userWord[i]) > -1) {
                        matchingWords.almost.push(i + 1);
                    }
                }
            }

            for (var j = 1; j < 6; j++) {
                if (matchingWords.exact.indexOf(j) > -1) {
                    attributes["row" + row]["c" + j]["hint"] = [{
                        "status": "positive"
                    }];
                } else if (matchingWords.almost.indexOf(j) > -1) {
                    attributes["row" + row]["c" + j]["hint"] = [{
                        "status": "warning"
                    }];
                } else {
                    attributes["row" + row]["c" + j]["hint"] = [{
                        "status": ""
                    }];
                }
            }

            attributes["row" + row]["disable"] = true;
            if ((row + 1) < 7) {
                attributes["row" + (row + 1)]["disable"] = false;
            }
        }

        var gamePattern = "";
        var words = [];
        var pattern = [];
        var inputs = api.state.inputs;
        for (var m = 1; m < 7; m++) {
            if (inputs["row" + m].c1) {
                words.push(inputs["row" + m].c1 + inputs["row" + m].c2 + inputs["row" + m].c3 + inputs["row" + m].c4 + inputs["row" + m].c5);
                for (var n = 1; n < 6; n++) {
                    pattern.push(attributes["row" + m]["c" + n].hint[0].status);
                }
            }
        }
        words = words.join();
        pattern = pattern.join();

        if ((row < 6) & !attemptComplete) {
            var data = {
                "record_id": api.state.dailyResultsRecID,
                "tries": row,
                "pass": attemptComplete,
                "words": words,
                "pattern": pattern,
                "game_data": gamePattern
            };
            api.data.update_results_record.execute({
                operation: "2",
                data: JSON.stringify(data)
            });
        }

        if (attemptComplete || (row == 6)) {
            attributes["row" + row].last = true;
            gamePattern = gtwUtils.getGameAttemptPattern(attributes);
            var data = {
                "record_id": api.state.dailyResultsRecID,
                "tries": row,
                "pass": attemptComplete,
                "words": words,
                "pattern": pattern,
                "game_data": gamePattern
            };
            api.data.final_result_update.execute({
                operation: "2",
                data: JSON.stringify(data)
            });
            api.setState("disableCheck", true);
            api.setState("patternURL", api.data.fetch_instance_url.output + "x_317911_us_telc_0_GTW_UserGameResult?sysparm_rid=" + api.state.dailyResultsRecID);
            if (!attemptComplete) {
                api.setState("appreciation", "It's Okay!");
                api.setState("disablePost", true);
            }
        }

    } else {
        for (var k = 1; k < 6; k++) {
            attributes["row" + row]["c" + k]["hint"] = [{
                "status": "critical"
            }];
        }
    }

    api.setState("attributes", attributes);

}]]></script>
        <script_api_version>2.0.0</script_api_version>
        <sys_class_name>sys_ux_client_script</sys_class_name>
        <sys_created_by>hemanth.jarajapu</sys_created_by>
        <sys_created_on>2022-03-19 16:16:03</sys_created_on>
        <sys_id>fbc508d6db124110883c68d35b961926</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Check User Word</sys_name>
        <sys_package display_value="GTW Game" source="x_317911_us_telc_0">b6a18c0487033010736ca68d0ebb35ba</sys_package>
        <sys_policy/>
        <sys_scope display_value="GTW Game">b6a18c0487033010736ca68d0ebb35ba</sys_scope>
        <sys_update_name>sys_ux_client_script_fbc508d6db124110883c68d35b961926</sys_update_name>
        <sys_updated_by>hemanth.jarajapu</sys_updated_by>
        <sys_updated_on>2022-03-19 16:16:03</sys_updated_on>
        <target>macroponent</target>
        <type>default</type>
    </sys_ux_client_script>
</record_update>
